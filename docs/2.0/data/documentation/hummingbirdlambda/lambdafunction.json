{"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder"],"title":"Associated Types","generated":true,"anchor":"Associated-Types"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)"],"anchor":"Initializers","title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul"],"anchor":"Instance-Methods","title":"Instance Methods"},{"anchor":"Type-Methods","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"],"title":"Type Methods"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LambdaFunction","kind":"identifier"}],"externalID":"s:17HummingbirdLambda0B8FunctionP","symbolKind":"protocol","role":"symbol","title":"LambdaFunction","roleHeading":"Protocol","modules":[{"name":"HummingbirdLambda"}],"navigatorTitle":[{"text":"LambdaFunction","kind":"identifier"}]},"abstract":[{"type":"text","text":"Protocol for Hummingbird Lambdas."}],"variants":[{"paths":["\/documentation\/hummingbirdlambda\/lambdafunction"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda"]]},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"},{"title":"Inherited By","kind":"relationships","type":"inheritedBy","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"]}],"seeAlsoSections":[{"title":"Lambda protocols","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"],"anchor":"Lambda-protocols","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"LambdaFunction","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Defines the "},{"type":"codeVoice","code":"Event"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"type":"text","text":" types, how you convert from "},{"type":"codeVoice","code":"Event"},{"type":"text","text":" to "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response","type":"reference","isActive":true},{"type":"text","text":" to "},{"type":"codeVoice","code":"Output"},{"type":"text","text":". Create a type conforming to this protocol and tag it"},{"text":" ","type":"text"},{"type":"text","text":"with "},{"type":"codeVoice","code":"@main"},{"type":"text","text":"."}]},{"code":["struct MyLambda: LambdaFunction {","    typealias Event = APIGatewayRequest","    typealias Output = APIGatewayResponse","    typealias Context = MyLambdaRequestContext \/\/ must conform to `LambdaRequestContext`","","    init(context: LambdaInitializationContext) {}","","    \/\/\/ build responder that will create a response from a request","    func buildResponder() -> some Responder<Context> {","        let router = Router(context: Context.self)","        router.get(\"hello\") { _,_ in","            \"Hello\"","        }","        return router.buildResponder()","    }","}"],"type":"codeListing","syntax":"swift"},{"name":"See Also","content":[{"inlineContent":[{"text":"","type":"text"},{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction"},{"text":" for specializations of this protocol.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"kind":"symbol","references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Context":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/context","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Context","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"InitializableFromSource","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP"},{"text":" = ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda05BasicB14RequestContextV","text":"BasicLambdaRequestContext"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","kind":"typeIdentifier","text":"Event"},{"kind":"text","text":">"}],"required":true,"kind":"symbol","role":"symbol","title":"Context","abstract":[{"type":"text","text":"Request context"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Context"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Output":{"title":"Output","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Output","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Output","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"Encodable","preciseIdentifier":"s:SE"}],"abstract":[{"type":"text","text":"Output of lambda"}],"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output","role":"symbol","kind":"symbol","required":true},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/output(from:)-41rdr":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/output(from:)-41rdr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15HummingbirdCore8ResponseV","text":"Response","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP6OutputQa","text":"Output","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Convert from "},{"code":"Response","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"Out"},{"text":" type","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/output(from:)-41rdr","required":true,"defaultImplementations":2,"kind":"symbol","title":"output(from:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/main()":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/main()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","role":"symbol","title":"main()","abstract":[{"type":"text","text":"Initializes and runs the Lambda function."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/main()"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","title":"Hummingbird Documentation","kind":"article","url":"\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Responder":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/responder","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"text":"Responder","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:11Hummingbird13HTTPResponderP","text":"HTTPResponder","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"HTTP Responder"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Responder","required":true,"kind":"symbol","title":"Responder"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Request","kind":"identifier"}],"title":"Request","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayLambdaFunction":{"title":"APIGatewayLambdaFunction","url":"\/documentation\/hummingbirdlambda\/apigatewaylambdafunction","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGateway","type":"text"}],"navigatorTitle":[{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayLambdaFunction","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"APIGatewayLambdaFunction","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda":{"abstract":[{"text":"Run Hummingbird inside an AWS Lambda.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda","role":"collection","title":"HummingbirdLambda","kind":"symbol","url":"\/documentation\/hummingbirdlambda","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/init(context:)":{"required":true,"type":"topic","role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/init(context:)","abstract":[{"type":"text","text":"Initialize application."}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:20AWSLambdaRuntimeCore27LambdaInitializationContextV","text":"LambdaInitializationContext"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"init(context:)","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/init(context:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/test(logLevel:_:)":{"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/test(loglevel:_:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"test","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"logLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","text":"Level","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:24HummingbirdLambdaTesting0B10TestClientV","text":"LambdaTestClient","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":">) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP0aB7TestingAD0B13TestableEvent0F0RpzrlE4test8logLevel_qd__7Logging6LoggerV0I0O_qd__AD0B10TestClientVyxGYaYbKctYaKlFZ5ValueL_qd__mfp","text":"Value"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Event"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"LambdaTestableEvent"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","role":"symbol","title":"test(logLevel:_:)","abstract":[{"type":"text","text":"Test "},{"type":"codeVoice","code":"LambdaFunction"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/test(logLevel:_:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/buildResponder()":{"type":"topic","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/buildresponder()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"buildResponder","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"Responder","kind":"typeIdentifier","preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP9ResponderQa"}],"abstract":[],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/buildResponder()","required":true,"kind":"symbol","title":"buildResponder()"},"doc://com.opticalaberration.hummingbird/s8SendableP":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction":{"abstract":[{"text":"Protocol for Hummingbird Lambdas.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LambdaFunction"}],"title":"LambdaFunction","kind":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction","navigatorTitle":[{"kind":"identifier","text":"LambdaFunction"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/shutdown()-1wnul":{"type":"topic","abstract":[{"type":"text","text":"Called when Lambda is terminating. This is where you can cleanup any resources"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/shutdown()-1wnul","required":true,"kind":"symbol","defaultImplementations":1,"url":"\/documentation\/hummingbirdlambda\/lambdafunction\/shutdown()-1wnul","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"shutdown","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"shutdown()","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/request(context:from:)-2wtco":{"required":true,"role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/request(context:from:)-2wtco","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:20AWSLambdaRuntimeCore13LambdaContextV","kind":"typeIdentifier","text":"LambdaContext"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17HummingbirdLambda0B8FunctionP5EventQa","text":"Event","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:15HummingbirdCore7RequestV","text":"Request","kind":"typeIdentifier"}],"kind":"symbol","title":"request(context:from:)","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/request(context:from:)-2wtco","defaultImplementations":2,"abstract":[{"text":"Convert from ","type":"text"},{"code":"In","type":"codeVoice"},{"type":"text","text":" type to "},{"type":"codeVoice","code":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/APIGatewayV2LambdaFunction":{"kind":"symbol","url":"\/documentation\/hummingbirdlambda\/apigatewayv2lambdafunction","title":"APIGatewayV2LambdaFunction","type":"topic","abstract":[{"text":"Protocol for Hummingbird Lambdas that use APIGatewayV2","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/APIGatewayV2LambdaFunction","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"APIGatewayV2LambdaFunction"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"APIGatewayV2LambdaFunction","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaFunction/Event":{"required":true,"role":"symbol","url":"\/documentation\/hummingbirdlambda\/lambdafunction\/event","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Event","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Decodable","kind":"typeIdentifier","preciseIdentifier":"s:Se"}],"kind":"symbol","title":"Event","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaFunction\/Event","abstract":[{"text":"Event that triggers the lambda","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Response":{"title":"Response","kind":"symbol","url":"\/documentation\/hummingbirdcore\/response","type":"topic","abstract":[{"text":"Holds all the required to generate a HTTP Response","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Response","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Response"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Response"},"logo.png":{"identifier":"logo.png","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"type":"image","alt":null}}}