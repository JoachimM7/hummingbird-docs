{"topicSections":[{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middleware:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:responder:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations"],"generated":true,"anchor":"Default-Implementations"}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID"],"title":"Router","anchor":"Router","generated":true}],"variants":[{"paths":["\/documentation\/hummingbird\/routergroup"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterGroup"},{"kind":"text","text":"<"},{"text":"Context","kind":"genericParameter"},{"kind":"text","text":"> "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The code below creates an ","type":"text"},{"code":"RouterGroup","type":"codeVoice"},{"type":"text","text":"with path “todos” and adds GET and PUT routes on “todos” and adds GET, PUT and"},{"text":" ","type":"text"},{"text":"DELETE routes on “todos\/:id” where id is the identifier for the todo","type":"text"}]},{"code":["app.router",".group(\"todos\")",".get(use: todoController.list)",".put(use: todoController.create)",".get(\":id\", use: todoController.get)",".put(\":id\", use: todoController.update)",".delete(\":id\", use: todoController.delete)"],"type":"codeListing","syntax":null}]}],"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"Hummingbird"}],"symbolKind":"struct","externalID":"s:11Hummingbird11RouterGroupV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RouterGroup"}],"role":"symbol","roleHeading":"Structure","title":"RouterGroup"},"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Router":{"abstract":[{"text":"Create rules for routing requests and then create ","type":"text"},{"code":"Responder","type":"codeVoice"},{"text":" that will follow these rules.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Router","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Router","kind":"identifier"}],"title":"Router","kind":"symbol","url":"\/documentation\/hummingbird\/router","navigatorTitle":[{"text":"Router","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponder":{"abstract":[{"text":"Protocol for object that produces a response given a request","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HTTPResponder","kind":"identifier"}],"title":"HTTPResponder","kind":"symbol","url":"\/documentation\/hummingbird\/httpresponder","navigatorTitle":[{"text":"HTTPResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Request","kind":"identifier"}],"title":"Request","kind":"symbol","url":"\/documentation\/hummingbirdcore\/request","navigatorTitle":[{"kind":"identifier","text":"Request"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouteCollection":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouteCollection","kind":"identifier"}],"url":"\/documentation\/hummingbird\/routecollection","navigatorTitle":[{"kind":"identifier","text":"RouteCollection"}],"kind":"symbol","type":"topic","title":"RouteCollection","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouteCollection","abstract":[{"text":"Collection of routes","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/add(middleware:)":{"abstract":[{"type":"text","text":"Add middleware to RouterGroup"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"middleware"},{"text":": ","kind":"text"},{"kind":"keyword","text":"any"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird18MiddlewareProtocolP","text":"MiddlewareProtocol","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore7RequestV"},{"text":", ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:15HummingbirdCore8ResponseV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird11RouterGroupV7Contextxmfp","kind":"typeIdentifier","text":"Context"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"RouterGroup","preciseIdentifier":"s:11Hummingbird11RouterGroupV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV7Contextxmfp","text":"Context"},{"text":">","kind":"text"}],"url":"\/documentation\/hummingbird\/routergroup\/add(middleware:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/add(middleware:)","kind":"symbol","role":"symbol","title":"add(middleware:)","type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"abstract":[{"text":"Lightweight, modern, flexible server framework written in Swift.","type":"text"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","type":"topic","role":"collection","kind":"symbol","title":"Hummingbird","url":"\/documentation\/hummingbird","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup":{"abstract":[{"type":"text","text":"Used to group together routes under a single path. Additional middleware can be added to the endpoint and each route can add a"},{"type":"text","text":" "},{"text":"suffix to the endpoint path","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RouterGroup","kind":"identifier"}],"title":"RouterGroup","kind":"symbol","url":"\/documentation\/hummingbird\/routergroup","navigatorTitle":[{"text":"RouterGroup","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterOptions":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterOptions"}],"url":"\/documentation\/hummingbird\/routeroptions","navigatorTitle":[{"text":"RouterOptions","kind":"identifier"}],"kind":"symbol","title":"RouterOptions","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterOptions","abstract":[{"text":"Router Options","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterPath":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterPath"}],"url":"\/documentation\/hummingbird\/routerpath","navigatorTitle":[{"text":"RouterPath","kind":"identifier"}],"kind":"symbol","title":"RouterPath","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterPath","abstract":[{"text":"Split router path into components","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/HTTPResponderBuilder":{"abstract":[{"text":"A type that has a single method to build a HTTPResponder","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/HTTPResponderBuilder","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"HTTPResponderBuilder","kind":"identifier"}],"title":"HTTPResponderBuilder","kind":"symbol","url":"\/documentation\/hummingbird\/httpresponderbuilder","navigatorTitle":[{"text":"HTTPResponderBuilder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/EndpointPath":{"abstract":[{"text":"Endpoint path storage","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/EndpointPath","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"EndpointPath","kind":"identifier"}],"title":"EndpointPath","kind":"symbol","url":"\/documentation\/hummingbird\/endpointpath","navigatorTitle":[{"text":"EndpointPath","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/RouterMethods-Implementations":{"abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/RouterMethods-Implementations","type":"topic","role":"collectionGroup","title":"RouterMethods Implementations","kind":"article","url":"\/documentation\/hummingbird\/routergroup\/routermethods-implementations"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/CallbackResponder":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CallbackResponder"}],"url":"\/documentation\/hummingbird\/callbackresponder","navigatorTitle":[{"text":"CallbackResponder","kind":"identifier"}],"kind":"symbol","title":"CallbackResponder","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/CallbackResponder","abstract":[{"type":"text","text":"Responder that calls supplied closure"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","title":"Hummingbird Documentation","kind":"article","url":"\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterResponder":{"abstract":[],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterResponder","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RouterResponder","kind":"identifier"}],"title":"RouterResponder","kind":"symbol","url":"\/documentation\/hummingbird\/routerresponder","navigatorTitle":[{"text":"RouterResponder","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestID":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RequestID"}],"url":"\/documentation\/hummingbird\/requestid","navigatorTitle":[{"text":"RequestID","kind":"identifier"}],"kind":"symbol","type":"topic","title":"RequestID","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestID","abstract":[{"text":"Generate Unique ID for each request","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"text":" ","type":"text"},{"type":"text","text":"that is associated with a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request"},{"type":"text","text":", and is therefore instantiated alongside the request."}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"RequestContext","kind":"identifier"}],"title":"RequestContext","kind":"symbol","url":"\/documentation\/hummingbird\/requestcontext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"logo.png"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterGroup/on(_:method:responder:)":{"url":"\/documentation\/hummingbird\/routergroup\/on(_:method:responder:)","abstract":[{"type":"text","text":"Add responder to call when path and method are matched"}],"title":"on(_:method:responder:)","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"on"},{"text":"<","kind":"text"},{"text":"Responder","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"RouterPath","kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird10RouterPathV"},{"kind":"text","text":", "},{"text":"method","kind":"externalParam"},{"kind":"text","text":": "},{"text":"HTTPRequest","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:9HTTPTypes11HTTPRequestV6MethodV","text":"Method"},{"text":", ","kind":"text"},{"text":"responder","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV2on_6method9responderACyxGAA0B4PathV_9HTTPTypes11HTTPRequestV6MethodVqd__t7ContextQyd__RszAA13HTTPResponderRd__lF9ResponderL_qd__mfp","text":"Responder"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird11RouterGroupV","text":"RouterGroup"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Context"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterGroup\/on(_:method:responder:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RouterMethods":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RouterMethods"}],"url":"\/documentation\/hummingbird\/routermethods","navigatorTitle":[{"text":"RouterMethods","kind":"identifier"}],"kind":"symbol","type":"topic","title":"RouterMethods","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RouterMethods","abstract":[{"type":"text","text":"Conform to "},{"code":"RouterMethods","type":"codeVoice"},{"type":"text","text":" to add standard router verb (get, post …) methods"}]}}}