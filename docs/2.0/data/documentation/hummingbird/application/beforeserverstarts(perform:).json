{"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"beforeServerStarts"},{"text":"(","kind":"text"},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"symbolKind":"method","title":"beforeServerStarts(perform:)","modules":[{"name":"Hummingbird"}],"roleHeading":"Instance Method","externalID":"s:11Hummingbird11ApplicationV18beforeServerStarts7performyyyYaYbKc_tF"},"abstract":[{"type":"text","text":"Add a process to run before we kick off the server service"}],"variants":[{"paths":["\/documentation\/hummingbird\/application\/beforeserverstarts(perform:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"beforeServerStarts","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"perform"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"process"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"process","content":[{"inlineContent":[{"text":"Process to run before server is started","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This is for processes that might need another Service running but need","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to run before the server has started. For example a database migration"},{"text":" ","type":"text"},{"text":"process might need the database connection pool running but should be","type":"text"},{"type":"text","text":" "},{"text":"finished before any request to the server can be made. Also they may be","type":"text"},{"type":"text","text":" "},{"text":"situations where you want another Service to have fully initialized","type":"text"},{"type":"text","text":" "},{"text":"before starting the server service.","type":"text"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/beforeServerStarts(perform:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application/beforeServerStarts(perform:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"beforeServerStarts"},{"kind":"text","text":"("},{"text":"perform","kind":"externalParam"},{"text":": () ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"url":"\/documentation\/hummingbird\/application\/beforeserverstarts(perform:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application\/beforeServerStarts(perform:)","abstract":[{"type":"text","text":"Add a process to run before we kick off the server service"}],"type":"topic","title":"beforeServerStarts(perform:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Application":{"kind":"symbol","title":"Application","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Application"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Application","url":"\/documentation\/hummingbird\/application","navigatorTitle":[{"text":"Application","kind":"identifier"}],"abstract":[{"type":"text","text":"Application type bringing together all the components of Hummingbird"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic"},"logo.png":{"alt":null,"identifier":"logo.png","type":"image","variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}]}}}