{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"create key\/value pair. If key already exist throw "},{"type":"codeVoice","code":"PersistError.duplicate"},{"text":" error","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"create","kind":"identifier"},{"kind":"text","text":"("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:s7Codablea","text":"Codable","kind":"typeIdentifier"},{"text":" & ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"key","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Key to store value against"}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"Codable value to store","type":"text"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)"]}],"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","externalID":"s:11Hummingbird13PersistDriverPAAE6create3key5valueySS_qd__tYaKSeRd__SERd__s8SendableRd__lF::SYNTHESIZED::s:11Hummingbird19MemoryPersistDriverC","modules":[{"name":"Hummingbird"}],"extendedModule":"Hummingbird","role":"symbol","title":"create(key:value:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"create","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"value","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Codable","preciseIdentifier":"s:s7Codablea"},{"text":" & ","kind":"text"},{"text":"Sendable","kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}]},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/PersistDriver-Implementations":{"url":"\/documentation\/hummingbird\/memorypersistdriver\/persistdriver-implementations","kind":"article","type":"topic","abstract":[],"title":"PersistDriver Implementations","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/PersistDriver-Implementations","role":"collectionGroup"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"identifier":"logo.png","type":"image","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver/create(key:value:)":{"type":"topic","abstract":[{"text":"create key\/value pair. If key already exist throw ","type":"text"},{"type":"codeVoice","code":"PersistError.duplicate"},{"type":"text","text":" error"}],"title":"create(key:value:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7Codablea","text":"Codable"},{"kind":"text","text":" & "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/hummingbird\/memorypersistdriver\/create(key:value:)","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver\/create(key:value:)"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/MemoryPersistDriver":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MemoryPersistDriver","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"MemoryPersistDriver"}],"kind":"symbol","url":"\/documentation\/hummingbird\/memorypersistdriver","title":"MemoryPersistDriver","abstract":[{"type":"text","text":"In memory driver for persist system for storing persistent cross request key\/value pairs"}],"role":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/MemoryPersistDriver"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic"}}}