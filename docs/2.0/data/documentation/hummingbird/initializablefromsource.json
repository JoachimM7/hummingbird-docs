{"seeAlsoSections":[{"title":"Miscellaneous","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment"],"anchor":"Miscellaneous","generated":true}],"sections":[],"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source"],"title":"Associated Types"},{"title":"Initializers","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp"],"generated":true,"anchor":"Initializers"}],"variants":[{"paths":["\/documentation\/hummingbird\/initializablefromsource"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]]},"metadata":{"navigatorTitle":[{"text":"InitializableFromSource","kind":"identifier"}],"externalID":"s:11Hummingbird23InitializableFromSourceP","role":"symbol","modules":[{"name":"Hummingbird"}],"title":"InitializableFromSource","roleHeading":"Protocol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource"},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"title":"Conforming Types","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext"],"kind":"relationships","type":"conformingTypes"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"InitializableFromSource","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Source","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa"},{"kind":"text","text":"> : "},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"A type that can be initialized from another type","type":"text"}],"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/ChildRequestContext":{"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/ChildRequestContext","title":"ChildRequestContext","abstract":[{"type":"text","text":"A RequestContext that can be initialized from another RequestContext."}],"url":"\/documentation\/hummingbird\/childrequestcontext","navigatorTitle":[{"text":"ChildRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChildRequestContext"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/LambdaRequestContext":{"navigatorTitle":[{"text":"LambdaRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/LambdaRequestContext","role":"symbol","title":"LambdaRequestContext","kind":"symbol","abstract":[{"text":"A Request Context that is initialized with the Event that triggered the Lambda","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"LambdaRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdlambda\/lambdarequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/init(source:)-2qxvp":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11Hummingbird23InitializableFromSourceP0D0Qa","text":"Source"},{"text":")","kind":"text"}],"defaultImplementations":1,"url":"\/documentation\/hummingbird\/initializablefromsource\/init(source:)-2qxvp","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/init(source:)-2qxvp","title":"init(source:)","kind":"symbol","type":"topic","required":true,"abstract":[{"type":"text","text":"Initialise from source type"}]},"doc://com.opticalaberration.hummingbird/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/com.opticalaberration.hummingbird\/s8SendableP"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicAuthRequestContext":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"BasicAuthRequestContext","kind":"identifier"}],"abstract":[{"text":"Implementation of a basic request context that supports authenticators","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicAuthRequestContext","navigatorTitle":[{"kind":"identifier","text":"BasicAuthRequestContext"}],"url":"\/documentation\/hummingbirdauth\/basicauthrequestcontext","title":"BasicAuthRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource":{"navigatorTitle":[{"kind":"identifier","text":"InitializableFromSource"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"InitializableFromSource"}],"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource","url":"\/documentation\/hummingbird\/initializablefromsource","title":"InitializableFromSource","role":"symbol","abstract":[{"type":"text","text":"A type that can be initialized from another type"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/BasicRouterRequestContext":{"navigatorTitle":[{"kind":"identifier","text":"BasicRouterRequestContext"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BasicRouterRequestContext"}],"kind":"symbol","title":"BasicRouterRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/BasicRouterRequestContext","url":"\/documentation\/hummingbirdrouter\/basicrouterrequestcontext","role":"symbol","abstract":[{"type":"text","text":"Basic implementation of a context that can be used with `RouterBuilder``"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdLambda/BasicLambdaRequestContext":{"navigatorTitle":[{"text":"BasicLambdaRequestContext","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BasicLambdaRequestContext","kind":"identifier"}],"kind":"symbol","title":"BasicLambdaRequestContext","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdlambda\/basiclambdarequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdLambda\/BasicLambdaRequestContext","abstract":[{"text":"The default Lambda request context.","type":"text"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdRouter/RouterRequestContext":{"title":"RouterRequestContext","kind":"symbol","url":"\/documentation\/hummingbirdrouter\/routerrequestcontext","type":"topic","abstract":[{"text":"Protocol that all request contexts used with RouterBuilder should conform to.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RouterRequestContext","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdRouter\/RouterRequestContext","role":"symbol","navigatorTitle":[{"text":"RouterRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/BasicRequestContext":{"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"BasicRequestContext","kind":"identifier"}],"title":"BasicRequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/BasicRequestContext","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"BasicRequestContext","kind":"identifier"}],"abstract":[{"text":"Implementation of a basic request context that supports everything the Hummingbird library needs","type":"text"}],"url":"\/documentation\/hummingbird\/basicrequestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RemoteAddressRequestContext":{"url":"\/documentation\/hummingbird\/remoteaddressrequestcontext","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RemoteAddressRequestContext","abstract":[{"text":"Protocol for request context that stores the remote address of connected client.","type":"text"}],"title":"RemoteAddressRequestContext","navigatorTitle":[{"text":"RemoteAddressRequestContext","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"RemoteAddressRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/InitializableFromSource/Source":{"title":"Source","url":"\/documentation\/hummingbird\/initializablefromsource\/source","abstract":[],"kind":"symbol","type":"topic","role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/InitializableFromSource\/Source","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Source","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/AuthRequestContext":{"url":"\/documentation\/hummingbirdauth\/authrequestcontext","type":"topic","abstract":[{"type":"text","text":"Protocol that all request contexts should conform to if they want to support"},{"type":"text","text":" "},{"type":"text","text":"authentication middleware"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/AuthRequestContext","title":"AuthRequestContext","navigatorTitle":[{"kind":"identifier","text":"AuthRequestContext"}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"AuthRequestContext","kind":"identifier"}]},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/SessionRequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/SessionRequestContext","kind":"symbol","role":"symbol","title":"SessionRequestContext","url":"\/documentation\/hummingbirdauth\/sessionrequestcontext","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SessionRequestContext","kind":"identifier"}],"navigatorTitle":[{"text":"SessionRequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol for RequestContext that stores session data"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/Environment":{"navigatorTitle":[{"text":"Environment","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Environment","kind":"identifier"}],"kind":"symbol","title":"Environment","type":"topic","role":"symbol","url":"\/documentation\/hummingbird\/environment","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/Environment","abstract":[{"type":"text","text":"Access environment variables"}]},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/BasicWebSocketRequestContext":{"navigatorTitle":[{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicWebSocketRequestContext","kind":"identifier"}],"kind":"symbol","title":"BasicWebSocketRequestContext","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdwebsocket\/basicwebsocketrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/BasicWebSocketRequestContext","abstract":[{"text":"Default implementation of a request context that supports WebSockets","type":"text"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"alt":null,"identifier":"logo.png","type":"image"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket/WebSocketRequestContext":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketRequestContext"}],"kind":"symbol","abstract":[{"text":"Request context protocol requirement for routers that support WebSockets","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket\/WebSocketRequestContext","navigatorTitle":[{"text":"WebSocketRequestContext","kind":"identifier"}],"url":"\/documentation\/hummingbirdwebsocket\/websocketrequestcontext","title":"WebSocketRequestContext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdAuth/BasicSessionRequestContext":{"navigatorTitle":[{"text":"BasicSessionRequestContext","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"BasicSessionRequestContext","kind":"identifier"}],"kind":"symbol","title":"BasicSessionRequestContext","type":"topic","role":"symbol","url":"\/documentation\/hummingbirdauth\/basicsessionrequestcontext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdAuth\/BasicSessionRequestContext","abstract":[{"type":"text","text":"Implementation of a basic request context that supports session storage and authenticators"}]}}}