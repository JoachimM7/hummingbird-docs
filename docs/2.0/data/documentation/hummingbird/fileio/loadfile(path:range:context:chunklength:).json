{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:chunkLength:)"},"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO"]]},"sections":[],"kind":"symbol","abstract":[{"text":"Load part of file and return response body.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadFile","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"RequestContext","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","preciseIdentifier":"s:11Hummingbird14RequestContextP"},{"kind":"text","text":", "},{"text":"chunkLength","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":" = NonBlockingFileIO.defaultChunkSize) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ResponseBody","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"path","content":[{"inlineContent":[{"type":"text","text":"System file path"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Range defining how much of the file is to be loaded"}],"type":"paragraph"}],"name":"range"},{"name":"context","content":[{"inlineContent":[{"type":"text","text":"Context this request is being called in"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Size of the chunks read from disk and loaded into memory (in bytes). Defaults to the value suggested by "},{"type":"codeVoice","code":"swift-nio"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"chunkLength"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"Response body plus file size"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Depending on the size of the part this will return either a response body containing a ByteBuffer or a stream that will provide the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"file in chunks."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)"]}],"metadata":{"externalID":"s:11Hummingbird6FileIOV04loadB04path5range7context11chunkLength0A4Core12ResponseBodyVSS_SNySiGxSitYaKAA14RequestContextRzlF","title":"loadFile(path:range:context:chunkLength:)","modules":[{"name":"Hummingbird"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"kind":"text","text":"("},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SN","text":"ClosedRange"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","kind":"typeIdentifier","text":"RequestContext"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"chunkLength"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/RequestContext":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/RequestContext","navigatorTitle":[{"text":"RequestContext","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol that all request contexts should conform to. A RequestContext is a statically typed metadata container for information"},{"type":"text","text":" "},{"text":"that is associated with a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","isActive":true},{"text":", and is therefore instantiated alongside the request.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestContext"}],"kind":"symbol","title":"RequestContext","url":"\/documentation\/hummingbird\/requestcontext"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO","title":"FileIO","abstract":[{"type":"text","text":"Manages File reading and writing."}],"navigatorTitle":[{"text":"FileIO","kind":"identifier"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FileIO","kind":"identifier"}],"type":"topic","url":"\/documentation\/hummingbird\/fileio"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird/FileIO/loadFile(path:range:context:chunkLength:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird\/FileIO\/loadFile(path:range:context:chunkLength:)","title":"loadFile(path:range:context:chunkLength:)","abstract":[{"type":"text","text":"Load part of file and return response body."}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"loadFile"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"range"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SN","text":"ClosedRange","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:11Hummingbird14RequestContextP","text":"RequestContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"chunkLength"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ResponseBody","preciseIdentifier":"s:15HummingbirdCore12ResponseBodyV"}],"type":"topic","url":"\/documentation\/hummingbird\/fileio\/loadfile(path:range:context:chunklength:)"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/Request":{"kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/Request","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"title":"Request","type":"topic","navigatorTitle":[{"text":"Request","kind":"identifier"}],"url":"\/documentation\/hummingbirdcore\/request","abstract":[{"text":"Holds all the values required to process a request","type":"text"}],"role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/HummingbirdCore/ResponseBody":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdCore\/ResponseBody","navigatorTitle":[{"text":"ResponseBody","kind":"identifier"}],"abstract":[{"text":"Response body","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ResponseBody","kind":"identifier"}],"kind":"symbol","type":"topic","title":"ResponseBody","url":"\/documentation\/hummingbirdcore\/responsebody","role":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic"},"logo.png":{"identifier":"logo.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}],"alt":null},"doc://com.opticalaberration.hummingbird/documentation/index":{"role":"collection","url":"\/documentation\/index","kind":"article","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","title":"Hummingbird Documentation","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic"}}}