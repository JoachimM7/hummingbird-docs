{"hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"],"anchor":"Rendering","generated":true,"title":"Rendering"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheParent"}],"platforms":["Linux"],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mustache\/mustacheparent"]}],"topicSections":[{"identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)"],"anchor":"Instance-Methods","generated":true,"title":"Instance Methods"}],"metadata":{"modules":[{"name":"Mustache"}],"navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MustacheParent","kind":"identifier"}],"roleHeading":"Protocol","title":"MustacheParent","externalID":"s:8Mustache0A6ParentP","role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent/child(named:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"child","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"Any"},{"text":"?","kind":"text"}],"role":"symbol","required":true,"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent\/child(named:)","abstract":[],"url":"\/documentation\/mustache\/mustacheparent\/child(named:)","title":"child(named:)","kind":"symbol"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","title":"Hummingbird Documentation","kind":"article","url":"\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/Mustache":{"url":"\/documentation\/mustache","abstract":[{"text":"Mustache template engine.","type":"text"}],"title":"Mustache","role":"collection","images":[{"type":"icon","identifier":"logo.png"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheLambda":{"url":"\/documentation\/mustache\/mustachelambda","abstract":[{"text":"Lambda function. Can add this to object being rendered to filter contents of objects.","type":"text"}],"title":"MustacheLambda","role":"symbol","navigatorTitle":[{"text":"MustacheLambda","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MustacheLambda"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheLambda"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheTransformable":{"type":"topic","url":"\/documentation\/mustache\/mustachetransformable","navigatorTitle":[{"text":"MustacheTransformable","kind":"identifier"}],"title":"MustacheTransformable","abstract":[{"text":"Objects that can have a transforms run on them. Mustache transforms are specific to this implementation","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of Mustache. They allow you to process objects before they are rendered."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheTransformable","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MustacheTransformable","kind":"identifier"}],"role":"symbol"},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheParent":{"url":"\/documentation\/mustache\/mustacheparent","abstract":[{"type":"text","text":"Protocol for object that has a custom method for accessing their children, instead"},{"type":"text","text":" "},{"type":"text","text":"of using Mirror"}],"title":"MustacheParent","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MustacheParent"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MustacheParent"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheParent"},"doc://com.opticalaberration.hummingbird/documentation/Mustache/MustacheCustomRenderable":{"url":"\/documentation\/mustache\/mustachecustomrenderable","abstract":[{"type":"text","text":"Allow object to override standard hummingbird type rendering which uses"},{"type":"text","text":" "},{"type":"codeVoice","code":"String(describing)"},{"text":".","type":"text"}],"title":"MustacheCustomRenderable","role":"symbol","navigatorTitle":[{"text":"MustacheCustomRenderable","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MustacheCustomRenderable","kind":"identifier"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Mustache\/MustacheCustomRenderable"}}}