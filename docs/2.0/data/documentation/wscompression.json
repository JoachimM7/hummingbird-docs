{"metadata":{"role":"collection","symbolKind":"module","title":"WSCompression","images":[{"identifier":"logo.png","type":"icon"}],"roleHeading":"Framework","modules":[{"name":"WSCompression"}],"externalID":"WSCompression"},"abstract":[{"text":"Compression support for WebSockets","type":"text"}],"hierarchy":{"paths":[[]]},"topicSections":[{"anchor":"Compression-extension","title":"Compression extension","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)"]}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression"},"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wscompression"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library provides an implementation of the WebSocket compression extension "},{"code":"permessage-deflate","type":"codeVoice"},{"text":" as detailed in ","type":"text"},{"type":"reference","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","isActive":true},{"type":"text","text":". You add the extension in the configuration for either your WebSocket upgrade or WebSocket client."}]},{"code":["let app = Application(","    router: Router(),","    server: .http1WebSocketUpgrade(","        configuration: .init(extensions: [.perMessageDeflate(minFrameSizeToCompress: 16)])","    ) { _, _, _ in","        return .upgrade([:]) { inbound, _, _ in","            var iterator = inbound.messages(maxSize: .max).makeAsyncIterator()","            let firstMessage = try await iterator.next()","            XCTAssertEqual(firstMessage, .text(\"Hello, testing compressed data\"))","        }","    }",")"],"syntax":"swift","type":"codeListing"}]}],"references":{"doc://com.opticalaberration.hummingbird/documentation/HummingbirdWebSocket":{"title":"HummingbirdWebSocket","kind":"symbol","url":"\/documentation\/hummingbirdwebsocket","type":"topic","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Adds support for upgrading HTTP connections to WebSocket."}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/HummingbirdWebSocket","role":"collection"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","kind":"symbol","role":"symbol","title":"perMessageDeflate(maxWindow:noContextTakeover:maxDecompressedFrameSize:minFrameSizeToCompress:)","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(maxwindow:nocontexttakeover:maxdecompressedframesize:minframesizetocompress:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"perMessageDeflate","kind":"identifier"},{"kind":"text","text":"("},{"text":"maxWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"noContextTakeover","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"maxDecompressedFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"minFrameSizeToCompress"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"text":"WebSocketExtensionFactory","kind":"typeIdentifier","preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV"}],"abstract":[{"text":"permessage-deflate websocket extension","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/WSCore/WebSocketExtensionFactory/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCore\/WebSocketExtensionFactory\/perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","kind":"symbol","role":"symbol","title":"perMessageDeflate(clientMaxWindow:clientNoContextTakeover:serverMaxWindow:serverNoContextTakeover:compressionLevel:memoryLevel:maxDecompressedFrameSize:minFrameSizeToCompress:)","url":"\/documentation\/wscore\/websocketextensionfactory\/permessagedeflate(clientmaxwindow:clientnocontexttakeover:servermaxwindow:servernocontexttakeover:compressionlevel:memorylevel:maxdecompressedframesize:minframesizetocompress:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"perMessageDeflate","kind":"identifier"},{"text":"(","kind":"text"},{"text":"clientMaxWindow","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"kind":"externalParam","text":"clientNoContextTakeover"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"serverMaxWindow"},{"kind":"text","text":": "},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"serverNoContextTakeover","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"compressionLevel","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"memoryLevel","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"text":"maxDecompressedFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"minFrameSizeToCompress","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:6WSCore25WebSocketExtensionFactoryV","text":"WebSocketExtensionFactory","kind":"typeIdentifier"}],"abstract":[{"text":"permessage-deflate websocket extension","type":"text"}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/WSCompression":{"images":[{"identifier":"logo.png","type":"icon"}],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSCompression","kind":"symbol","role":"collection","title":"WSCompression","url":"\/documentation\/wscompression","abstract":[{"text":"Compression support for WebSockets","type":"text"}],"type":"topic"},"https://datatracker.ietf.org/doc/html/rfc7692.html":{"type":"link","identifier":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html","title":"RFC 7692","titleInlineContent":[{"text":"RFC 7692","type":"text"}],"url":"https:\/\/datatracker.ietf.org\/doc\/html\/rfc7692.html"},"logo.png":{"type":"image","identifier":"logo.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/com.opticalaberration.hummingbird\/logo.png"}]},"doc://com.opticalaberration.hummingbird/documentation/WSClient":{"role":"collection","url":"\/documentation\/wsclient","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/WSClient","title":"WSClient","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Support for connecting to WebSocket server."}],"type":"topic"},"doc://com.opticalaberration.hummingbird/documentation/Hummingbird":{"role":"collection","url":"\/documentation\/hummingbird","kind":"symbol","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Hummingbird","title":"Hummingbird","images":[{"identifier":"logo.png","type":"icon"}],"abstract":[{"type":"text","text":"Lightweight, modern, flexible server framework written in Swift."}],"type":"topic"}}}