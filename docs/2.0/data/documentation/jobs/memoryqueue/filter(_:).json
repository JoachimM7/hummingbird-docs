{"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"code":"AsyncSequence.filter(_:)","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@preconcurrency"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"isIncluded"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"text":"AsyncFilterSequence","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/jobs\/memoryqueue\/filter(_:)"]}],"metadata":{"platforms":[{"unavailable":false,"beta":false,"introducedAt":"13.0","name":"iOS","deprecated":false},{"unavailable":false,"introducedAt":"10.15","name":"macOS","deprecated":false,"beta":false},{"name":"tvOS","unavailable":false,"introducedAt":"13.0","beta":false,"deprecated":false},{"deprecated":false,"introducedAt":"6.0","unavailable":false,"name":"watchOS","beta":false}],"extendedModule":"_Concurrency","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","externalID":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:4Jobs11MemoryQueueC","title":"filter(_:)","modules":[{"name":"Jobs","relatedModules":["_Concurrency"]}],"symbolKind":"method"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations"]]},"identifier":{"url":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/filter(_:)","interfaceLanguage":"swift"},"references":{"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/AsyncSequence-Implementations":{"url":"\/documentation\/jobs\/memoryqueue\/asyncsequence-implementations","abstract":[],"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/AsyncSequence-Implementations","kind":"article","title":"AsyncSequence Implementations","type":"topic","role":"collectionGroup"},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"MemoryQueue","kind":"identifier"}],"url":"\/documentation\/jobs\/memoryqueue","navigatorTitle":[{"text":"MemoryQueue","kind":"identifier"}],"kind":"symbol","title":"MemoryQueue","type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue","abstract":[{"type":"text","text":"In memory implementation of job queue driver. Stores job data in a circular buffer"}]},"doc://com.opticalaberration.hummingbird/documentation/Jobs/MemoryQueue/filter(_:)":{"identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs\/MemoryQueue\/filter(_:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Sci7ElementQa"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV","text":"AsyncFilterSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/jobs\/memoryqueue\/filter(_:)","abstract":[],"title":"filter(_:)"},"doc://com.opticalaberration.hummingbird/documentation/index":{"abstract":[{"text":"Documentation for Hummingbird the lightweight, flexible, modern server framework.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/index","role":"collection","title":"Hummingbird Documentation","kind":"article","url":"\/documentation\/index","images":[{"type":"icon","identifier":"logo.png"}]},"logo.png":{"variants":[{"url":"\/images\/com.opticalaberration.hummingbird\/logo.png","traits":["1x","light"]}],"type":"image","identifier":"logo.png","alt":null},"doc://com.opticalaberration.hummingbird/documentation/Jobs":{"role":"collection","url":"\/documentation\/jobs","kind":"symbol","type":"topic","title":"Jobs","identifier":"doc:\/\/com.opticalaberration.hummingbird\/documentation\/Jobs","images":[{"type":"icon","identifier":"logo.png"}],"abstract":[{"type":"text","text":"Offload work your server would be doing to another server."}]}}}